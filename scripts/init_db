#!/bin/bash

set -u

ENV_EXPANSE_ADMIN_USERNAME=${ENV_EXPANSE_ADMIN_USERNAME:-}
ENV_EXPANSE_ADMIN_PASSWORD=${ENV_EXPANSE_ADMIN_PASSWORD:-}
ENV_EXPANSE_DATABASE_NAME=${ENV_EXPANSE_DATABASE_NAME:-}

if [[ "$ENV_EXPANSE_ADMIN_PASSWORD" == "" || "$ENV_EXPANSE_DATABASE_NAME" == "" || "$ENV_EXPANSE_ADMIN_USERNAME" == "" ]]; then
  echo "Requires ENV_EXPANSE_ADMIN_USERNAME, ENV_EXPANSE_ADMIN_PASSWORD, ENV_EXPANSE_DATABASE_NAME set as env variables"
  exit 1
fi

is_running=$(docker ps -f name=expanse-db -f status=running | grep postgres)
is_shutdown=$(docker ps -f name=expanse-db -f status=exited | grep postgres | cut -d ' ' -f 1)

set -e

if [[ "${is_running}" != "" ]]; then
  echo "Postgress is already running in a container"

elif [[ "${is_shutdown}" != "" ]]; then
  echo "Postgres already installed, just not running"
  docker start ${is_shutdown}

else
  echo "Creating container and starting postgres"

  mkdir -p ~/data/expanse-db

  docker run -d \
    --name expanse-db \
    -v ~/data/expanse-db:/var/lib/postgresql/data \
    -p 5432:5432 \
    -e POSTGRES_PASSWORD="${ENV_EXPANSE_ADMIN_PASSWORD}" \
    postgres
fi

echo "Waiting until database is ready to accept connections"
set +e
is_down=1
while [[ $is_down -ne 0 ]]; do
  echo "Querying..."
  sleep 1
  _=$(POSTGRES_PASSWORD="${ENV_EXPANSE_ADMIN_PASSWORD}" docker exec -it expanse-db psql -U postgres -c "select 1")
  is_down=$?
done
set -e

create_database () {
  local database="$1"

  dbname=$(POSTGRES_PASSWORD="${ENV_EXPANSE_ADMIN_PASSWORD}" docker exec -it expanse-db psql -U postgres -t -c \
    "SELECT datname FROM pg_database WHERE datname = '${database}'")
  dbname=$(echo -e $dbname | tr -d [:space:])

  if [[ "${dbname}" != "${database}" ]]; then
    echo "Database ${database} does not exist yet; creating it"
    POSTGRES_PASSWORD="${ENV_EXPANSE_ADMIN_PASSWORD}" docker exec -it expanse-db psql -U postgres -t -c \
      "CREATE DATABASE ${database}"
  else
    echo "Database ${database} exists already"
  fi

}

create_admin () {
  database="$1"
  username="$2"
  password="$3"

  admin=$(echo -e \
    $(POSTGRES_PASSWORD="${ENV_EXPANSE_ADMIN_PASSWORD}" docker exec -it expanse-db \
      psql ${database} -U postgres -t -c \
      "SELECT rolname FROM pg_roles WHERE rolname='${username}'" \
    ) | tr -d [:space:] \
  )

  if [[ "${admin}" == "" ]]; then
    echo "Creating admin user, ${username}, and privileges on ${database}"

    POSTGRES_PASSWORD="${ENV_EXPANSE_ADMIN_PASSWORD}" docker exec -it expanse-db \
      psql ${database} -U postgres -t -c \
      "CREATE USER ${username} WITH ENCRYPTED PASSWORD '${password}'"
  else
    echo "Admin user ${username} already created"
  fi

  echo "Setting privelges on ${username} for ${database}"

  POSTGRES_PASSWORD="${ENV_EXPANSE_ADMIN_PASSWORD}" docker exec -it expanse-db \
    psql ${database} -U postgres -t -c \
    "GRANT ALL ON DATABASE ${database} TO ${username}"
}


create_database "${ENV_EXPANSE_DATABASE_NAME}"
create_database "${ENV_EXPANSE_DATABASE_NAME}_staging"
create_database "${ENV_EXPANSE_DATABASE_NAME}_test"

create_admin "${ENV_EXPANSE_DATABASE_NAME}" "${ENV_EXPANSE_ADMIN_USERNAME}" "${ENV_EXPANSE_ADMIN_PASSWORD}"
create_admin "${ENV_EXPANSE_DATABASE_NAME}_staging" "${ENV_EXPANSE_ADMIN_USERNAME}_staging" "${ENV_EXPANSE_ADMIN_PASSWORD}"
create_admin "${ENV_EXPANSE_DATABASE_NAME}_test" "${ENV_EXPANSE_ADMIN_USERNAME}_test" "password"

echo "Database created and up and running. Ready for migrations and other fun things."
